rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check user roles from Firestore
    function getUserRole(userId) {
      return get(/databases/(default)/documents/users/$(userId)).data.role;
    }

    // Allow staff members to write to event images
    match /event_images/{eventId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && getUserRole(request.auth.uid) in ['admin', 'overall_head', 'event_representative', 'organizer'];
    }

    // Allow authenticated users to upload admit cards for their own registrations
    match /admit_cards/{eventId}/{userId}_{registrationId}_{fileName} {
      allow read: if request.auth != null && (request.auth.uid == userId || getUserRole(request.auth.uid) in ['admin', 'overall_head', 'event_representative', 'organizer']);
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
